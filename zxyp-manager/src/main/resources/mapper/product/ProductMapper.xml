<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.xccit.zxyp.mapper.product.ProductMapper">

    <resultMap id="productVO" type="io.xccit.zxyp.model.entity.product.Product" autoMapping="true"></resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        `id`,`name`,`brand_id`,`category1_id`,`category2_id`,`category3_id`,`unit_name`,`slider_urls`,
        `spec_value`,`status`,`audit_status`,`audit_message`,`create_time`,`update_time`,`is_deleted`
    </sql>
    <!--添加商品的基本信息,使用添加完基本信息之后的ID,供其他两个Mapper做添加-->
    <insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into product (
        id,
        name,
        brand_id,
        category1_id,
        category2_id,
        category3_id,
        unit_name,
        slider_urls,
        spec_value,
        status,
        audit_status,
        audit_message
        ) values (
        #{id},
        #{name},
        #{brandId},
        #{category1Id},
        #{category2Id},
        #{category3Id},
        #{unitName},
        #{sliderUrls},
        #{specValue},
        #{status},
        #{auditStatus},
        #{auditMessage}
        )
    </insert>
    <!--修改商品信息-->
    <update id="update">
        update product set
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="brandId != null and brandId != ''">
            brand_id = #{brandId},
        </if>
        <if test="category1Id != null and category1Id != ''">
            category1_id = #{category1Id},
        </if>
        <if test="category2Id != null and category2Id != ''">
            category2_id = #{category2Id},
        </if>
        <if test="category3Id != null and category3Id != ''">
            category3_id = #{category3Id},
        </if>
        <if test="unitName != null and unitName != ''">
            unit_name = #{unitName},
        </if>
        <if test="sliderUrls != null and sliderUrls != ''">
            slider_urls = #{sliderUrls},
        </if>
        <if test="specValue != null and specValue != ''">
            spec_value = #{specValue},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        <if test="auditStatus != null and auditStatus != ''">
            audit_status = #{auditStatus},
        </if>
        <if test="auditMessage != null and auditMessage != ''">
            audit_message = #{auditMessage},
        </if>
        update_time = CURRENT_TIMESTAMP
        <where>
            id = #{id}
        </where>
    </update>

    <!--分页列表条件查询-->
    <select id="list" resultMap="productVO">
        SELECT
        p.id,p.name,p.brand_id,p.category1_id,p.category2_id,p.category3_id,p.unit_name,p.slider_urls,p.spec_value,p.status,
        p.audit_status,p.audit_message,p.create_time,p.update_time,c1.name category1Name,c2.name category2Name,c3.name
        category3Name,b.name brandName
        FROM
        product p
        INNER JOIN brand b ON b.id = p.brand_id
        INNER JOIN category c1 ON c1.id = p.category1_id
        INNER JOIN category c2 ON c2.id = p.category2_id
        INNER JOIN category c3 ON c3.id = p.category3_id
        <where>
            <if test="category1Id != null">
                and p.category1_id = #{category1Id}
            </if>
            <if test="category2Id != null">
                and p.category2_id = #{category2Id}
            </if>
            <if test="category3Id != null">
                and p.category3_id = #{category3Id}
            </if>
            and p.is_deleted = 0
        </where>
    </select>
    <!--根据ID获取基本商品信息-->
    <select id="getOne" resultMap="productVO">
        SELECT
        p.id,p.name,p.brand_id,p.category1_id,p.category2_id,p.category3_id,p.unit_name,p.slider_urls,p.spec_value,p.status,
        p.audit_status,p.audit_message,p.create_time,p.update_time,c1.name category1Name,c2.name category2Name,c3.name
        category3Name,b.name brandName
        FROM
        product p
        INNER JOIN brand b ON b.id = p.brand_id
        INNER JOIN category c1 ON c1.id = p.category1_id
        INNER JOIN category c2 ON c2.id = p.category2_id
        INNER JOIN category c3 ON c3.id = p.category3_id
        <where>
            <if test="productId != null">
                p.id = #{productId}
            </if>
            and p.is_deleted = 0
        </where>
    </select>
</mapper>